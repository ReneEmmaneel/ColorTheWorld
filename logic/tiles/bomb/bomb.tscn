[gd_scene load_steps=30 format=2]

[ext_resource path="res://logic/tiles/bomb/bomb.gd" type="Script" id=1]
[ext_resource path="res://tileSet/level/bomb.png" type="Texture" id=2]
[ext_resource path="res://tileSet/level/explosion.png" type="Texture" id=3]
[ext_resource path="res://menu/titleScreen/new_noisetexture.tres" type="Texture" id=4]

[sub_resource type="Animation" id=2]
resource_name = "Explosion"
tracks/0/type = "value"
tracks/0/path = NodePath("Explosion:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[sub_resource type="Animation" id=1]
resource_name = "Walk"
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath("Pivot/PlayerSprite:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 0.098073, 0.0980731 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 0.97, 0.97 ), Vector2( 1, 1 ) ]
}

[sub_resource type="VisualShaderNodeVectorOp" id=12]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeInput" id=13]
output_port_for_preview = 0
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=14]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=16]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=19]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=20]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorFunc" id=21]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorOp" id=22]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=3]
output_port_for_preview = 0
constant = Color( 1, 0, 0, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=23]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.1, 0.1, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=24]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -1, -1, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=25]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -1, -1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=26]
function = 12

[sub_resource type="VisualShaderNodeTexture" id=6]
output_port_for_preview = 1
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeVectorOp" id=7]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=8]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.7 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeVectorOp" id=10]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=15]
output_port_for_preview = 0
constant = Color( 0, 1, 0, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=11]
constant = Color( 1, 0, 0, 1 )

[sub_resource type="VisualShader" id=4]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_7;



void vertex() {
// Output:0

}

void fragment() {
// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, UV.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Color:2
	vec3 n_out2p0 = vec3(1.000000, 0.000000, 0.000000);
	float n_out2p1 = 1.000000;

// Input:11
	float n_out11p0 = TIME;

// ScalarOp:14
	float n_in14p1 = 1.00000;
	float n_out14p0 = n_out11p0 * n_in14p1;

// ScalarFunc:13
	float n_out13p0 = cos(n_out14p0);

// ScalarFunc:23
	float n_out23p0 = abs(n_out13p0);

// Color:9
	vec3 n_out9p0 = vec3(0.000000, 1.000000, 0.000000);
	float n_out9p1 = 1.000000;

// VectorOp:12
	vec3 n_out12p0 = vec3(n_out23p0) * n_out9p0;

// VectorOp:10
	vec3 n_out10p0 = n_out2p0 + n_out12p0;

// VectorOp:5
	vec3 n_out5p0 = vec3(n_out4p1) * n_out10p0;

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, UV.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// VectorOp:8
	vec3 n_out8p0 = n_out5p0 * n_out7p0;

// Input:16
	vec3 n_out16p0 = vec3(UV, 0.0);

// VectorOp:17
	vec3 n_in17p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out17p0 = n_out16p0 - n_in17p1;

// VectorFunc:18
	vec3 n_out18p0 = abs(n_out17p0);

// VectorOp:20
	vec3 n_in20p1 = vec3(0.10000, 0.10000, 0.00000);
	vec3 n_out20p0 = n_out18p0 + n_in20p1;

// VectorOp:21
	vec3 n_in21p1 = vec3(-1.00000, -1.00000, 0.00000);
	vec3 n_out21p0 = n_out20p0 + n_in21p1;

// VectorOp:22
	vec3 n_in22p1 = vec3(-1.00000, -1.00000, 0.00000);
	vec3 n_out22p0 = n_out21p0 * n_in22p1;

// VectorOp:19
	vec3 n_out19p0 = n_out8p0 * n_out22p0;

// ScalarOp:6
	float n_in6p1 = 0.70000;
	float n_out6p0 = n_out4p1 * n_in6p1;

// Output:0
	COLOR.rgb = n_out19p0;
	COLOR.a = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -295.175, -76.6594 )
mode = 1
flags/light_only = false
nodes/vertex/2/node = SubResource( 11 )
nodes/vertex/2/position = Vector2( 42.2766, 201 )
nodes/fragment/0/position = Vector2( 660, 140 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -400, 240 )
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( -200, -200 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( 40, 220 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( 400, -420 )
nodes/fragment/7/node = SubResource( 9 )
nodes/fragment/7/position = Vector2( 40, 500 )
nodes/fragment/8/node = SubResource( 10 )
nodes/fragment/8/position = Vector2( 260, 320 )
nodes/fragment/9/node = SubResource( 15 )
nodes/fragment/9/position = Vector2( -600, 680 )
nodes/fragment/10/node = SubResource( 12 )
nodes/fragment/10/position = Vector2( -220, 320 )
nodes/fragment/11/node = SubResource( 13 )
nodes/fragment/11/position = Vector2( -980, 460 )
nodes/fragment/12/node = SubResource( 14 )
nodes/fragment/12/position = Vector2( -400, 500 )
nodes/fragment/13/node = SubResource( 16 )
nodes/fragment/13/position = Vector2( -800, 580 )
nodes/fragment/14/node = SubResource( 17 )
nodes/fragment/14/position = Vector2( -800, 440 )
nodes/fragment/16/node = SubResource( 19 )
nodes/fragment/16/position = Vector2( -260, 780 )
nodes/fragment/17/node = SubResource( 20 )
nodes/fragment/17/position = Vector2( -100, 760 )
nodes/fragment/18/node = SubResource( 21 )
nodes/fragment/18/position = Vector2( 80, 780 )
nodes/fragment/19/node = SubResource( 22 )
nodes/fragment/19/position = Vector2( 520, 380 )
nodes/fragment/20/node = SubResource( 23 )
nodes/fragment/20/position = Vector2( 280, 740 )
nodes/fragment/21/node = SubResource( 24 )
nodes/fragment/21/position = Vector2( 440, 740 )
nodes/fragment/22/node = SubResource( 25 )
nodes/fragment/22/position = Vector2( 600, 740 )
nodes/fragment/23/node = SubResource( 26 )
nodes/fragment/23/position = Vector2( -600, 580 )
nodes/fragment/connections = PoolIntArray( 4, 1, 5, 0, 4, 1, 6, 0, 6, 0, 0, 1, 5, 0, 8, 0, 7, 0, 8, 1, 2, 0, 10, 0, 10, 0, 5, 1, 11, 0, 14, 0, 14, 0, 13, 0, 16, 0, 17, 0, 17, 0, 18, 0, 8, 0, 19, 0, 19, 0, 0, 0, 18, 0, 20, 0, 20, 0, 21, 0, 21, 0, 22, 0, 22, 0, 19, 1, 9, 0, 12, 1, 12, 0, 10, 1, 13, 0, 23, 0, 23, 0, 12, 0 )

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )

[node name="Bomb" type="Node2D"]
z_index = 11
script = ExtResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Explosion = SubResource( 2 )
anims/Walk = SubResource( 1 )

[node name="Tween" type="Tween" parent="."]

[node name="Pivot" type="Position2D" parent="."]

[node name="PlayerSprite" type="Sprite" parent="Pivot"]
texture = ExtResource( 2 )

[node name="Explosion" type="Sprite" parent="."]
visible = false
material = SubResource( 5 )
texture = ExtResource( 3 )
